name: Publish packages to GHCR

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:
    inputs:
      packages:
        description: "Optional space-separated package names (e.g. 'vncp-grafana vncp-influxdb'). Leave empty to build all."
        required: false
        default: ""

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}     # e.g. Versa-Node
      PACKAGES_DIR: packages
      VNCP_DIR: /usr/share/versanode
      DEFAULT_LICENSE: Apache-2.0
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tag
        id: vars
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Lowercase owner for image tags
        run: |
          echo "ORG=${OWNER,,}" >> "$GITHUB_ENV"
          echo "Using org: ${OWNER} -> ${ORG}"

      - name: Resolve package list
        id: pkgs
        shell: bash
        run: |
          set -euo pipefail
          if [[ -n "${{ inputs.packages }}" ]]; then
            echo "list=${{ inputs.packages }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          shopt -s nullglob
          pkgs=()
          for d in "${PACKAGES_DIR}"/*; do
            [[ -d "$d" ]] || continue
            base="$(basename "$d")"
            [[ "$base" == "vncp-template" ]] && continue
            pkgs+=("$base")
          done
          (( ${#pkgs[@]} > 0 )) || { echo "No packages found in ${PACKAGES_DIR}"; exit 1; }
          echo "list=${pkgs[*]}" >> "$GITHUB_OUTPUT"
          echo "Will build: ${pkgs[*]}"

      - name: Build & push (wrap to inject VNCP files + labels)
        shell: bash
        env:
          TAG: ${{ steps.vars.outputs.tag }}
        run: |
          set -euo pipefail

          CACHE_FROM="type=gha"
          CACHE_TO="type=gha,mode=max"

          for name in ${{ steps.pkgs.outputs.list }}; do
            pkg="${PACKAGES_DIR}/${name}"
            echo "::group::${name}"

            # sanity checks
            [[ -f "${pkg}/Dockerfile" ]] || { echo "Missing Dockerfile in ${pkg}"; exit 2; }
            [[ -f "${pkg}/vncp.config.yaml" ]] || { echo "Missing vncp.config.yaml in ${pkg}"; exit 3; }
            [[ -f "${pkg}/README.md" ]] || { echo "Missing README.md in ${pkg}"; exit 4; }

            RAW_TAG="raw-${GITHUB_SHA::7}"
            CREATED="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
            VERSION="${TAG#v}"

            echo "Step A: build base image -> ghcr.io/${ORG}/${name}:${RAW_TAG}"
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --provenance=false --sbom=false \
              --cache-from "${CACHE_FROM}" --cache-to "${CACHE_TO}" \
              -t ghcr.io/${ORG}/${name}:${RAW_TAG} \
              "${pkg}" \
              --push

            echo "Step B: wrap image to inject VNCP files + labels"
            WRAP_DOCKERFILE="$(mktemp)"
            trap 'rm -f "$WRAP_DOCKERFILE"' EXIT
            
            # Wrapper Dockerfile (no heredoc, no --platform)
            printf '%s\n' \
            '# syntax=docker/dockerfile:1.6' \
            'ARG BASE_IMAGE' \
            'FROM ${BASE_IMAGE}' \
            'ARG VNCP_DIR=/usr/share/versanode' \
            'RUN mkdir -p ${VNCP_DIR}' \
            'COPY --chmod=0644 vncp.config.yaml ${VNCP_DIR}/vncp.config.yaml' \
            'COPY --chmod=0644 README.md        ${VNCP_DIR}/README.md' \
            > "$WRAP_DOCKERFILE"
            
            LABELS=(
              --label "io.versanode.vncp.config.path=${VNCP_DIR}/vncp.config.yaml"
              --label "io.versanode.vncp.readme.path=${VNCP_DIR}/README.md"
              --label "org.opencontainers.image.title=${name}"
              --label "org.opencontainers.image.version=${VERSION}"
              --label "org.opencontainers.image.revision=${GITHUB_SHA}"
              --label "org.opencontainers.image.source=https://github.com/${GITHUB_REPOSITORY}"
              --label "org.opencontainers.image.url=https://github.com/${GITHUB_REPOSITORY}"
              --label "org.opencontainers.image.created=${CREATED}"
              --label "org.opencontainers.image.vendor=${OWNER}"
              --label "org.opencontainers.image.licenses=${DEFAULT_LICENSE}"
            )
            # (Keep org.opencontainers.image.description in each package's Dockerfile)
            
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --provenance=false --sbom=false \
              --cache-from "${CACHE_FROM}" --cache-to "${CACHE_TO}" \
              --build-arg "BASE_IMAGE=ghcr.io/${ORG}/${name}:${RAW_TAG}" \
              --build-arg "VNCP_DIR=${VNCP_DIR}" \
              -f "$WRAP_DOCKERFILE" \
              "${LABELS[@]}" \
              -t ghcr.io/${ORG}/${name}:${TAG} \
              -t ghcr.io/${ORG}/${name}:${GITHUB_SHA::7} \
              "${pkg}" --push

            echo "::endgroup::"
          done

name: Publish packages to GHCR

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      OWNER: ${{ github.repository_owner }}   # raw owner (may have caps)
      DEFAULT_LICENSE: Apache-2.0
      VNCP_DIR: /usr/share/versanode
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tag
        id: vars
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Lowercase owner for image tags
        run: |
          echo "ORG=${OWNER,,}" >> "$GITHUB_ENV"
          echo "Using org: ${OWNER} -> ${ORG}"

      - name: Build & push each package (with VNCP files injected)
        env:
          TAG: ${{ steps.vars.outputs.tag }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          export CREATED="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

          # Buildx cache (keeps builds fast & saves runner disk)
          CACHE_FROM="type=gha,scope=${GITHUB_REF_NAME//\//_}"
          CACHE_TO="type=gha,scope=${GITHUB_REF_NAME//\//_},mode=max"

          for pkg in packages/*; do
            [ -d "$pkg" ] || continue
            name="$(basename "$pkg")"
            echo "::group::Package: ${name}"

            # 0) Ensure VNCP files exist so COPY never fails
            if [ ! -f "$pkg/vncp.config.yaml" ]; then
              printf 'name: %s\nversion: "%s"\n' "$name" "${TAG}" > "$pkg/vncp.config.yaml"
            fi
            if [ ! -f "$pkg/README.md" ]; then
              printf '# %s\n\nAuto-generated README for %s.\n' "$name" "$name" > "$pkg/README.md"
            fi

            # 1) Build the package’s own Dockerfile first -> raw image (multi-arch, pushed)
            RAW_TAG="${TAG}"
            docker buildx build \
              --provenance=false --sbom=false \
              --cache-from "${CACHE_FROM}" --cache-to "${CACHE_TO}" \
              --platform linux/amd64,linux/arm64 \
              -t "ghcr.io/${ORG}/${name}:${RAW_TAG}" \
              -t "ghcr.io/${ORG}/${name}:${GITHUB_SHA::7}" \
              "$pkg" --push

            # 2) Inspect its runtime user by doing a quick local (amd64) load
            #    (only to read .Config.User; we drop this local image immediately)
            LOCAL_TAG="localinspect-${name}-${GITHUB_SHA}"
            docker buildx build \
              --provenance=false --sbom=false \
              --platform linux/amd64 \
              -t "${LOCAL_TAG}" \
              "$pkg" --load

            BASE_USER="$(docker inspect --format '{{.Config.User}}' "${LOCAL_TAG}" || true)"
            docker rmi -f "${LOCAL_TAG}" >/dev/null 2>&1 || true
            if [ -z "${BASE_USER}" ]; then
              BASE_USER="root"
            fi
            echo "Detected base runtime user: ${BASE_USER}"

            # 3) Create a tiny wrapper Dockerfile that:
            #    - switches to root
            #    - creates ${VNCP_DIR}, copies vncp.config.yaml + README.md
            #    - restores original user
            WRAP_DOCKERFILE="$(mktemp)"
            trap 'rm -f "$WRAP_DOCKERFILE"' EXIT

            printf '%s\n' \
            '# syntax=docker/dockerfile:1.6' \
            'ARG BASE_IMAGE' \
            'ARG BASE_USER=root' \
            'ARG VNCP_DIR=/usr/share/versanode' \
            'FROM ${BASE_IMAGE}' \
            'USER 0' \
            'RUN mkdir -p ${VNCP_DIR}' \
            'COPY --chmod=0644 vncp.config.yaml ${VNCP_DIR}/vncp.config.yaml' \
            'COPY --chmod=0644 README.md        ${VNCP_DIR}/README.md' \
            'RUN chmod 0644 ${VNCP_DIR}/vncp.config.yaml ${VNCP_DIR}/README.md' \
            'USER ${BASE_USER}' \
            > "$WRAP_DOCKERFILE"

            # Common OCI labels (keep description inside each package’s Dockerfile)
            LABELS=(
              --label "io.versanode.vncp.config.path=${VNCP_DIR}/vncp.config.yaml"
              --label "io.versanode.vncp.readme.path=${VNCP_DIR}/README.md"
              --label "org.opencontainers.image.title=${name}"
              --label "org.opencontainers.image.version=${TAG}"
              --label "org.opencontainers.image.revision=${GITHUB_SHA}"
              --label "org.opencontainers.image.source=https://github.com/${GITHUB_REPOSITORY}"
              --label "org.opencontainers.image.url=https://github.com/${GITHUB_REPOSITORY}"
              --label "org.opencontainers.image.created=${CREATED}"
              --label "org.opencontainers.image.vendor=${OWNER}"
              --label "org.opencontainers.image.licenses=${DEFAULT_LICENSE}"
            )
            # NOTE: Do NOT set org.opencontainers.image.description here.
            # Keep that in each package’s Dockerfile as you requested.

            # 4) Build the final image (multi-arch), injecting VNCP files
            docker buildx build \
              --provenance=false --sbom=false \
              --cache-from "${CACHE_FROM}" --cache-to "${CACHE_TO}" \
              --platform linux/amd64,linux/arm64 \
              --build-arg "BASE_IMAGE=ghcr.io/${ORG}/${name}:${RAW_TAG}" \
              --build-arg "BASE_USER=${BASE_USER}" \
              --build-arg "VNCP_DIR=${VNCP_DIR}" \
              -f "$WRAP_DOCKERFILE" \
              "${LABELS[@]}" \
              -t "ghcr.io/${ORG}/${name}:${TAG}" \
              -t "ghcr.io/${ORG}/${name}:${GITHUB_SHA::7}" \
              "$pkg" --push

            echo "::endgroup::"
          done

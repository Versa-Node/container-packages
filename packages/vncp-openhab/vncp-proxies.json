[
  {
    "slug": "openhab",
    "port": 8080,
    "nginx_block": "location = ${PATH} { return 308 ${PATH}/; }\nlocation ^~ ${PATH}/ {\n    rewrite ^${PATH}/(.*)$ /$1 break;\n\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $connection_upgrade;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Forwarded-Prefix ${PATH};\n\n    # rewrite absolute redirects from upstream (e.g. Location: /auth -> /openhab/auth)\n    proxy_redirect ~^/(.*)$ ${PATH}/$1;\n\n    # let sub_filter see plain text\n    proxy_set_header Accept-Encoding \"\";\n\n    # rewrite root-absolute URLs to live under ${PATH}\n    sub_filter_once off;\n    sub_filter_types text/html text/css application/javascript application/json text/plain;\n    sub_filter 'href=\"/'  'href=\"${PATH}/';\n    sub_filter 'src=\"/'   'src=\"${PATH}/';\n    sub_filter 'action=\"/' 'action=\"${PATH}/';\n    sub_filter 'url(/'     'url(${PATH}/';\n    sub_filter '\"/rest'   '\"${PATH}/rest';\n    sub_filter \"'/rest\"   \"'${PATH}/rest\";\n    sub_filter '\"/images/' '\"${PATH}/images/';\n    sub_filter \"'/images/\" \"'${PATH}/images/\";\n    sub_filter '\"/res/'    '\"${PATH}/res/';\n    sub_filter \"'/res/\"    \"'${PATH}/res/\";\n    sub_filter '\"/js/'     '\"${PATH}/js/';\n    sub_filter \"'/js/\"     \"'${PATH}/js/\";\n    # OAuth paths\n    sub_filter '\"/auth'    '\"${PATH}/auth';\n    sub_filter \"'/auth\"    \"'${PATH}/auth\";\n\n    proxy_pass ${UPSTREAM};\n}\n\n# ---- Fallbacks for root-absolute requests the app makes ----\nlocation ^~ /images/ { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation ^~ /res/    { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation ^~ /js/     { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation ^~ /rest/   { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation ^~ /auth    { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation = /favicon.ico           { proxy_pass ${UPSTREAM}; }\nlocation = /manifest.json         { proxy_pass ${UPSTREAM}; }\nlocation = /manifest.webmanifest  { proxy_pass ${UPSTREAM}; }\n"
  }
]

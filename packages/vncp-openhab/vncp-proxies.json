[
  {
    "slug": "openhab",
    "port": 8080,
    "nginx_block": "location = ${PATH} { return 308 ${PATH}/; }\nlocation ^~ ${PATH}/ {\n    rewrite ^${PATH}/(.*)$ /$1 break;\n\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $connection_upgrade;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Forwarded-Prefix ${PATH};\n\n    # make upstream absolute redirects land under the slug\n    absolute_redirect off;\n    proxy_redirect ~^/(.*)$ ${PATH}/$1;\n\n    # let sub_filter read/alter bodies, and touch ALL types\n    proxy_set_header Accept-Encoding \"\";\n    sub_filter_once off;\n    sub_filter_types *;\n\n    # --- ultra-generic rewrites ---\n    # 1) Any HTML/JS/CSS attribute that looks like =\"/...\" or ='/...'\n    sub_filter '=\"/' '=\"${PATH}/';\n    sub_filter \"='/\" \"='${PATH}/\";\n    # 2) CSS url(/...)\n    sub_filter 'url(/' 'url(${PATH}/';\n    # 3) Webpack dynamic chunks (sets the base URL used by code-split chunks)\n    sub_filter '__webpack_require__.p=\"/' '__webpack_require__.p=\"${PATH}/';\n\n    proxy_pass ${UPSTREAM};\n}\n"
  }
]

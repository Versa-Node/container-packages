[
  {
    "slug": "openhab",
    "port": 8080,
    "nginx_block": "location = ${PATH} { return 308 ${PATH}/; }\nlocation ^~ ${PATH}/ {\n    rewrite ^${PATH}/(.*)$ /$1 break;\n\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $connection_upgrade;\n    proxy_set_header Host $host;\n    proxy_set_header X-Forwarded-Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    # IMPORTANT: force HTTP so upstream does NOT set Secure cookies\n    proxy_set_header X-Forwarded-Proto http;\n    proxy_set_header X-Forwarded-Prefix ${PATH};\n    proxy_set_header X-Forwarded-Uri $request_uri;\n\n    absolute_redirect off;\n    proxy_redirect ~^/$ ${PATH}/;\n    proxy_redirect ~^/(.*)$ ${PATH}/$1;\n    proxy_redirect ~^https?://[^/]+/(.*)$ $scheme://$host${PATH}/$1;\n\n    # make cookies work under the slug\n    proxy_cookie_path /auth ${PATH}/auth;\n    proxy_cookie_path /     ${PATH}/;\n    # try to neutralize Secure/SameSite if they still appear\n    proxy_cookie_flags ~ secure off;\n    proxy_cookie_flags ~ samesite=lax;\n\n    proxy_set_header Accept-Encoding \"\";\n    sub_filter_once off;\n    sub_filter_types *;\n\n    # keep client-side redirects inside the slug\n    sub_filter '=\"/\"' '=\"${PATH}/\"';\n    sub_filter \"='/'\" \"='${PATH}/'\";\n    sub_filter 'window.location=\"/\"' 'window.location=\"${PATH}/\"';\n    sub_filter \"window.location='/'\" \"window.location='${PATH}/'\";\n    sub_filter 'location.href=\"/\"' 'location.href=\"${PATH}/\"';\n    sub_filter \"location.href='/'\" \"location.href='${PATH}/'\";\n    sub_filter 'location.replace(\"/\")' 'location.replace(\"${PATH}/\")';\n    sub_filter \"location.replace('/')\" \"location.replace('${PATH}/')\";\n\n    # generic absolutes\n    sub_filter '=\"/' '=\"${PATH}/';\n    sub_filter \"='/\" \"='${PATH}/\";\n    sub_filter 'url(/' 'url(${PATH}/';\n\n    # chunks + base href\n    sub_filter '__webpack_require__.p=\"/' '__webpack_require__.p=\"${PATH}/';\n    sub_filter '<base href=\"/' '<base href=\"${PATH}/';\n\n    # common OpenHAB calls\n    sub_filter '\"/rest'  '\"${PATH}/rest';\n    sub_filter \"'/rest\"  \"'${PATH}/rest\";\n    sub_filter '\"/images/' '\"${PATH}/images/';\n    sub_filter \"'/images/\" \"'${PATH}/images/\";\n    sub_filter '\"/res/'   '\"${PATH}/res/';\n    sub_filter \"'/res/\"   \"'${PATH}/res/\";\n    sub_filter '\"/js/'    '\"${PATH}/js/';\n    sub_filter \"'/js/\"    \"'${PATH}/js/\";\n    sub_filter '\"/auth'   '\"${PATH}/auth';\n    sub_filter \"'/auth\"   \"'${PATH}/auth\";\n\n    proxy_pass ${UPSTREAM};\n}\n\n# fallbacks (rare strays)\nlocation ^~ /images/ { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation ^~ /res/    { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation ^~ /js/     { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation ^~ /rest/   { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation ^~ /auth    { proxy_set_header Accept-Encoding \"\"; proxy_pass ${UPSTREAM}; }\nlocation = /favicon.ico          { proxy_pass ${UPSTREAM}; }\nlocation = /manifest.json        { proxy_pass ${UPSTREAM}; }\nlocation = /manifest.webmanifest { proxy_pass ${UPSTREAM}; }\n"
  }
]

[
  {
    "slug": "n8n",
    "port": 5678,
    "nginx_block": "location = ${PATH} { return 308 ${PATH}/; }\nlocation ^~ ${PATH}/ {\n    rewrite ^${PATH}/(.*)$ /$1 break;\n    proxy_pass ${UPSTREAM};\n    proxy_http_version 1.1;\n\n    # WebSocket upgrade\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $connection_upgrade;\n\n    # Forwarded headers\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto https;\n    proxy_set_header X-Forwarded-Host $host;\n    proxy_set_header X-Forwarded-Prefix ${PATH};\n\n    # Make sub_filter effective (no compression)\n    proxy_set_header Accept-Encoding \"\";\n\n    # Rewrite absolute asset paths\n    sub_filter_once off;\n    sub_filter_types text/html text/css application/javascript application/json text/plain;\n    sub_filter 'href=\"/' 'href=\"${PATH}/';\n    sub_filter 'src=\"/' 'src=\"${PATH}/';\n    sub_filter 'action=\"/' 'action=\"${PATH}/';\n    sub_filter 'url(/' 'url(${PATH}/';\n\n    # Fix upstream redirects & cookies\n    proxy_redirect ~^(/.+)$ ${PATH}$1;\n    proxy_cookie_path / ${PATH}/;\n\n    # Helpful timeouts\n    proxy_read_timeout 1h;\n    proxy_send_timeout 1h;\n}\n"
  }
]
